{"version":3,"file":"FormBase-3825f0e1.js","sources":["../../../src/presentation/components/FormBase/FormBase.tsx"],"sourcesContent":["import React from 'react';\nimport { FormDescription } from '../FormDescription/FormDescription';\nimport { FormError } from '../FormError/FormError';\nimport { FormLabel } from '../FormLabel/FormLabel';\n\nexport type FormBaseProps = {\n  className?: string;\n  id: string;\n  label: string;\n  required?: boolean;\n  descriptions?: string[];\n  errorMessage?: string;\n};\n\nconst createDescriptionId = (id: string) => `${id}-description`;\n\nfunction FormContainer({\n  className,\n  children,\n}: {\n  className?: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <div\n      className={`sm:flex flex-row justify-between justify-items-center ${\n        className || ''\n      }`}\n    >\n      {children}\n    </div>\n  );\n}\n\nfunction FormLabelWithDescription({\n  className,\n  id,\n  label,\n  required,\n  descriptions = [],\n}: {\n  className?: string;\n  id: string;\n  label: string;\n  required?: boolean;\n  descriptions?: string[];\n}) {\n  return (\n    <div className={`basis-1/3 sm:pt-2.5 ${className || ''}`}>\n      <FormLabel htmlFor={id} required={required} label={label} />\n      {descriptions.length > 0 && (\n        <FormDescription\n          className=\"pt-1.5 sm:px-1.5\"\n          id={createDescriptionId(id)}\n          descriptions={descriptions}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction InputWithFormError({\n  className,\n  errorMessage,\n  children,\n}: {\n  className?: string;\n  errorMessage?: string;\n  children: React.ReactNode;\n}) {\n  return (\n    <div className={`basis-2/3 mt-1.5 sm:mt-0 ${className || ''}`}>\n      {children}\n      {!!errorMessage && (\n        <FormError className=\"mt-1.5\" message={errorMessage} />\n      )}\n    </div>\n  );\n}\n\nexport function FormBase({\n  className,\n  id,\n  label,\n  required,\n  descriptions,\n  errorMessage,\n  render,\n}: FormBaseProps & {\n  render: (params: { descriptionId: string }) => JSX.Element;\n}) {\n  const descriptionId = createDescriptionId(id);\n  return (\n    <FormContainer className={className}>\n      <FormLabelWithDescription\n        id={id}\n        required={required}\n        label={label}\n        descriptions={descriptions}\n      />\n      <InputWithFormError errorMessage={errorMessage}>\n        {render({ descriptionId })}\n      </InputWithFormError>\n    </FormContainer>\n  );\n}\n"],"names":["createDescriptionId","id","FormContainer","className","children","jsx","FormLabelWithDescription","label","required","descriptions","jsxs","FormLabel","FormDescription","InputWithFormError","errorMessage","FormError","FormBase","render","descriptionId"],"mappings":"wLAcA,MAAAA,EAAAC,GAAA,GAAAA,gBAEA,SAAAC,EAAA,CAAuB,UAAAC,EACrB,SAAAC,CAEF,EAAA,CAIE,OAAAC,EAAA,IACE,MAAC,CAAA,UAAA,yDAAAF,GAAA,KAEgB,SAAAC,CAGd,CAAA,CAGP,CAEA,SAAAE,EAAA,CAAkC,UAAAH,EAChC,GAAAF,EACA,MAAAM,EACA,SAAAC,EACA,aAAAC,EAAA,CAAA,CAEF,EAAA,CAOE,OAAAC,EAAA,KAAA,MAAA,CAAA,UAAA,uBAAAP,GAAA,KAAA,SAAA,CAEIE,EAAA,IAAAM,EAAA,CAAA,QAAAV,EAAA,SAAAO,EAAA,MAAAD,EAAA,EAA0DE,EAAA,OAAA,GAAAJ,EAAA,IAExDO,EAAC,CAAA,UAAA,mBACW,GAAAZ,EAAAC,CAAA,EACgB,aAAAQ,CAC1B,CAAA,CACF,CAAA,CAAA,CAIR,CAEA,SAAAI,EAAA,CAA4B,UAAAV,EAC1B,aAAAW,EACA,SAAAV,CAEF,EAAA,CAKE,OAAAM,EAAA,KAAA,MAAA,CAAA,UAAA,4BAAAP,GAAA,KAAA,SAAA,CAEKC,EAAA,CAAA,CAAAU,GAAAT,EAAAA,IAAAU,EAAA,CAAA,UAAA,SAAA,QAAAD,EAAA,CAEsD,CAAA,CAAA,CAI7D,CAEO,SAAAE,EAAA,CAAkB,UAAAb,EACvB,GAAAF,EACA,MAAAM,EACA,SAAAC,EACA,aAAAC,EACA,aAAAK,EACA,OAAAG,CAEF,EAAA,CAGE,MAAAC,EAAAlB,EAAAC,CAAA,EACA,OAAAS,OAAAR,EAAA,CAAA,UAAAC,EAAA,SAAA,CAEIE,EAAA,IAAAC,EAAC,CAAA,GAAAL,EACC,SAAAO,EACA,MAAAD,EACA,aAAAE,CACA,CAAA,EACFJ,MAAAQ,EAAA,CAAA,aAAAC,EAAA,SAAAG,EAAA,CAAA,cAAAC,CAAA,CAAA,EAAA,CAGA,CAAA,CAAA,CAGN"}