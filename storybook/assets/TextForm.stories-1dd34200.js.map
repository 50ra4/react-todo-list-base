{"version":3,"file":"TextForm.stories-1dd34200.js","sources":["../../../src/presentation/components/TextForm/TextForm.tsx"],"sourcesContent":["import React from 'react';\nimport { FormDescription } from '../FormDescription/FormDescription';\nimport { FormError } from '../FormError/FormError';\nimport { FormLabel } from '../FormLabel/FormLabel';\nimport { TextInput } from '../TextInput/TextInput';\n\ntype TextFormProps = {\n  className?: string;\n  type?: 'email' | 'tel' | 'text' | 'url';\n  id: string;\n  name: string;\n  label: string;\n  errorMessage?: string;\n  descriptions?: string[];\n  required?: boolean;\n  value?: string;\n  placeholder?: string;\n};\n\nexport const TextForm = React.forwardRef<HTMLInputElement, TextFormProps>(\n  function TextForm(\n    {\n      className,\n      type,\n      id,\n      name,\n      label,\n      required,\n      value,\n      placeholder,\n      errorMessage,\n      descriptions = [],\n    },\n    ref,\n  ) {\n    const descriptionId = `${id}-description`;\n\n    return (\n      <div\n        className={`\n      sm:flex flex-row justify-between justify-items-center\n      ${className}`}\n      >\n        <div className=\"basis-1/3\">\n          <FormLabel\n            htmlFor={id}\n            formType={required ? 'required' : 'none'}\n            label={label}\n          />\n          <FormDescription\n            className=\"pt-1.5\"\n            id={descriptionId}\n            descriptions={descriptions}\n          />\n        </div>\n        <div className=\"basis-2/3 mt-3 sm:mt-0\">\n          <TextInput\n            className=\"w-full\"\n            ref={ref}\n            type={type}\n            id={id}\n            name={name}\n            value={value}\n            placeholder={placeholder}\n            isInvalid={!!errorMessage}\n            describedId={descriptionId}\n          />\n          {!!errorMessage && <FormError message={errorMessage} />}\n        </div>\n      </div>\n    );\n  },\n);\n"],"names":["TextForm","React","className","type","id","name","label","required","value","placeholder","errorMessage","descriptions","ref","descriptionId","jsxs","jsx","FormLabel","FormDescription","TextInput","FormError"],"mappings":"0UAmBO,MAAAA,EAAAC,EAAA,WAAuB,SAAA,CAE1B,UAAAC,EACE,KAAAC,EACA,GAAAC,EACA,KAAAC,EACA,MAAAC,EACA,SAAAC,EACA,MAAAC,EACA,YAAAC,EACA,aAAAC,EACA,aAAAC,EAAA,CAAA,CACgB,EAAAC,EAAA,CAIlB,MAAAC,EAAA,GAAAT,gBAEA,OAAAU,EAAA,KACE,MAAC,CAAA,UAAA;AAAA;AAAA,QACYZ,IAEX,SAAA,CAEAY,EAAAA,KAAA,MAAA,CAAA,UAAA,YAAA,SAAA,CACEC,EAAA,IAAAC,EAAC,CAAA,QAAAZ,EACU,SAAAG,EAAA,WAAA,OACyB,MAAAD,CAClC,CAAA,EACFS,EAAA,IACAE,EAAC,CAAA,UAAA,SACW,GAAAJ,EACN,aAAAF,CACJ,CAAA,CACF,EAAA,EACFG,EAAAA,KAAA,MAAA,CAAA,UAAA,yBAAA,SAAA,CAEEC,EAAA,IAAAG,EAAC,CAAA,UAAA,SACW,IAAAN,EACV,KAAAT,EACA,GAAAC,EACA,KAAAC,EACA,MAAAG,EACA,YAAAC,EACA,UAAA,CAAA,CAAAC,EACa,YAAAG,CACA,CAAA,EACf,CAAA,CAAAH,GAAAK,EAAA,IAAAI,EAAA,CAAA,QAAAT,EAAA,CACqD,EAAA,CACvD,CAAA,CAAA,CACF,CAGN;;;;"}